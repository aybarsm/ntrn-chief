#!/usr/bin/env php
<?php

$conf = [
//    'posix.enabled' => extension_loaded('posix') && (ini_get('enable_posix') === '1' || php_sapi_name() === 'cli'),
    'posix.enabled' => function_exists('posix_getuid') && function_exists('posix_getgid') && function_exists('posix_setuid') && function_exists('posix_setgid') && function_exists('posix_getpwnam') && function_exists('posix_getgrnam'),
    'fn.configure' => function(string $key, bool $uid = true){
        $cur = $uid ? posix_getuid() : posix_getgid();
        $req = getenv($key) !== false ? getenv($key) : (get_cfg_var($key) !== false ? get_cfg_var($key) : $cur);
        if (is_string($req) && ! preg_match('/^\\d+$/', $req)){
            $req = ($rtr = ($uid ? posix_getpwnam($req) : posix_getgrnam($req))) !== false ? ($rtr[($uid ? 'uid' : 'gid')] ?? $cur) : $cur;
        }
        $req = (int)$req;
        return $cur !== $req && (($uid ? posix_setuid($req) : posix_setgid($req)) !== false) ? $req : $cur;
    },
];

if ($conf['posix.enabled']){
    define('NTRN_PUID', $conf['fn.configure']('PUID'));
    define('NTRN_PGID', $conf['fn.configure']('PGID', false));
}

unset($conf);

define('LARAVEL_START', microtime(true));
$autoloader = require file_exists(__DIR__.'/vendor/autoload.php') ?  __DIR__.'/vendor/autoload.php' : __DIR__.'/../../autoload.php';
$app = require_once __DIR__.'/bootstrap/app.php';
$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
$status = $kernel->handle(
    $input = new Symfony\Component\Console\Input\ArgvInput,
    new Symfony\Component\Console\Output\ConsoleOutput
);
$kernel->terminate($input, $status);
exit($status);
